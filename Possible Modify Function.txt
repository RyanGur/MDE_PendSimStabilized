import numpy as np

# Example algorithm to modify pendulum length
def modify_length(angle, angular_velocity, angular_acceleration, current_length):
    # Constants for the algorithm
    max_length_change = 0.1  # Maximum change in length per cycle
    angle_threshold = np.radians(10)  # Angle threshold for modification
    vel_threshold = np.radians(5)  # Angular velocity threshold for modification
    accel_threshold = np.radians(1)  # Angular acceleration threshold for modification

    # Calculate a modification factor based on the conditions
    modification_factor = 0  # Default, no modification
    if abs(angle) > angle_threshold:
        if angular_velocity < -vel_threshold:
            # Lengthen the pendulum
            modification_factor = max_length_change
        elif angular_velocity > vel_threshold:
            # Shorten the pendulum
            modification_factor = -max_length_change
    elif abs(angle) <= angle_threshold:
        if abs(angular_velocity) > vel_threshold or abs(angular_acceleration) > accel_threshold:
            # Lengthen the pendulum
            modification_factor = max_length_change

    # Apply the modification factor to the current length
    new_length = current_length + modification_factor * current_length

    # Ensure the length stays within reasonable bounds (e.g., not negative)
    if new_length < 0.1:
        new_length = 0.1

    return new_length

# Example usage:
angle = np.radians(15)  # Example angle
angular_velocity = np.radians(-8)  # Example angular velocity
angular_acceleration = np.radians(2)  # Example angular acceleration
current_length = 1.0  # Example initial length

# Modify the length based on the algorithm
new_length = modify_length(angle, angular_velocity, angular_acceleration, current_length)

print(f"Current Length: {current_length}")
print(f"New Length: {new_length}")
